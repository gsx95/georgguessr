language: minimal
services:
- docker
before_install:
- sudo apt-get update
# install node
- curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
- sudo apt install nodejs
# install docker compose
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
# install aws cli
- curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
- unzip -qq awscliv2.zip
- sudo ./aws/install
# install aws sam cli
- curl -L https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip > sam.zip
- unzip -qq sam.zip -d sam-installation
- sudo ./sam-installation/install
# install go
- sudo rm -rf /home/travis/.gimme/versions/go*
- sudo rm -rf /usr/local/go
- curl -L https://golang.org/dl/go1.17.linux-amd64.tar.gz > golang.tar.gz
- sudo tar -C /usr/local -xzf golang.tar.gz
- export PATH=$PATH:/usr/local/go/bin 
- unset GOROOT
- source ~/.bashrc

script:
- docker-compose -f ./test/docker-compose-dynamodb.yml up -d
- make local &
- go run test/test.go

env:
  global:
  - secure: IaQS7SQKJGCVMVs39rKMCW7etEZZdTU/cBu7jIsFKjq8dvH4uEEasHkdVeNbMfviBQr0jLdhCGsJtgq5n9YMJLIt2wA9S6QpZ9AAfLgL7Sr3qZ+l5paABMTwN9j7Mw+OBVZU0ScKlmro2idXB1GDCSX2lxuP9gz9XMNKzRts5xlu0atSp5a4WcKb3Rz0U6yjQ3ZD2dXhpSsSbUo7jqWumE/gAYWPF5MsMmcZ43200wkc8HDTxn+M7wfTxEj/CinuFT2nZ5AgWMzs3wkFN/2mXolCLeQWe2vthyam8+lp7aT9biAxa0oAm9/J9/ZqvMY3qigDMDJQceR4ZsIput/Yebr2a9Xn87Ni5D8MbytbYp7myJ8jX0vThaJ1uJa6U+N7UfJle1ikVjSC1mvbox1VZa2HFZY7vK9UdchSZErUhZz3+GJLtsovCLlyQFljBaMIE/8/DH974DzHe/JY2EOz8nDtvYKOmm4F7xRx5567hVNT1RcPhhpbTQHiM/XR8IT8O3QsW+9pnLsELaLvMDKumjwkNJ8MVa80BYQ/LY/BLFXdKv7kCA9dh+WBpRTKkCcMVCMSYPBiVCD8OFwPWy4XaKNOhODeOu+Fut8gzS7/8AgVwGQyW38F8E/kiA/wwn3jULJXUw8SC1z4SR7duO8itgznDepvjpnhGNFLioUWSSU=
  - secure: Dlr4zuuliJpgje1tBFq+/Lp0Ck/8dmPTmhqNErVlXv0ZtApxL8PoRVDRf0mPwAVJEAlOiNg7KHL1eqiCdU5iExiN9u3qz49mG1kYnw0wYtHVoIe6ISrL6Ikeuf6huKmVe/2gu/118GvQVh7iOuPo2qnjAid3+k9wJ1bc5hNyd/44ImyzwlnEK/pLWOndYR7rTQjutvF+w3BrEgNMFCgRpfu8OVyVYXaILSiqdSKJTvReD1+ofOqenaNNuMMKPmh9xjOjLH5XMJ9nKzuAfvuQhTPeMF6W2V3wxf1EoE8gJ4bw6bzPW4nUzjt2s22bpFYg3NNFuwOOG6QCzsiPHtHfV7FxRmD4pOl9VHigsho7DsHy659erS3z3gJS8baz5PW8uj0OZblQ/26MZCVDqGx+S7BUFbgc9BnblxHCkk2Ej6h7Hq/MXlegXLE52Qjhn+25sKDLOK8wgx2YglCSubmzc6WglYpKUxhGmoao+LcNnOInJzNLT4HoT3r/GDOHT4jiKnPT7T3aM8gpx/AXjPmasP8k64XFmuFlViivLkRhComLLxXpUq74qNlJqZN+X7uCyQOu/jGXq440HCgAbo0zvHGyj39NXBRKpqF5UejlDal7DRNhG5WHU37lIe2IiNyk2XwJN+jozbMJB/v3/d6FMmhqAgXoFR2uDjTJpBebdHk=
  - secure: T5edzJnmqmpAYR/NWkw4XXQU+OJKqeSMqx3X43ADZAVnaNHZOYK3pafQwBdtfyORCr00DqYetx0P65xn9MRkNALL2peIogFjMkIL1FO/aantbVBt9Znm0SzwUaqNwZxyyx/3Dpd0GAFCv/CnSSbXV4IWeGxbOX9H3g6DSTYBdcmQBO6GZeMAeA/FoBvGu1tMHuaEOwjilJDDrsO8wVhSO9e/SURzqPS1n1OcM0XQYhXnjiWTdg3yG5jr0tJDsyPIiFurnByRT2ehrRhePBRLeV0bZkPrkIQmRoQPs8ApvyIcO9/tptD0DW9TbqgfU+zeJA2HoWzIhwUR1DKFQCu6Q0+K6lxqAH68CFkA1OdYBG5s6AnN5Fx4B1C3TDs2JpzObTVDHDbUOz6XTMQeBRktB9ZSCDEsDZNpkvZYOn7q0217A+fHa8MKVljTTFUQ+H0IqbT6KxVl9bgXBlLmJDzGR1kTvdzmEAxmrl5CtD3Z5coD0r4nENWqlnx/jfNu9l4vfRhqNZvz0h5FZvvd6+10OR6oI2xzo+8cW/cOT5hsvdbIfl6BCwTagfUcEfRrKDhdZ/W9n4CBRWqKisMjmz/anjiGoHGik4hMSrru+xDrUKfSb9Xvwpnzx09u8rMnpCOm4VMjD1iukuP8pFnz2fMWxT+Nv+2Wcmi0uZuX3EUnCV4=
  - secure: OSKxQoUKTD8ObVl+ndwaPCaQ8KrrPDIOuvsc+qyeGErW9iuaZsXPRErRQDN4JuXaJOSRd/+V0TH+puINrBIvRGx6DE9Ggtn1WjhQdIr1mSUeKAmHimrcMtnD2voehsVc1DvvZEWdSVmnxJc/VZFE4t0Lej4P8QaaIBqGMyM4HADY6Nkhntl6A4x2wyY5hbYZvw73zROTfyOehmXkYyvHoLHXaXNfS/hMZ5tlZMdoSwJy5NO170loLUQMuPphvCbkJiWFVyi3aFLGSci9XbLefHPZ/aKDK0FeKA5/H5/T5EnJic4pazHb+gZiJLwtffIAGJDQcQhOrlTbslMpaF6tuuYfLZkTF/7yrYgNbpanUNIIfFMHdREVpozEiHSu6E/g03eyQE+mHYkthTmbGdyjqlQwSa0aTG5sQhO4zpZKeh9OYaL1dq9fLiyRu2LvxHKsLdfoK3L/Wdo3z/JlrvtA/Nw25JJg49JNVGq5Dytl5AlJUyhW57y4dBkU8lIK8u8bjq0SE/k9kzG++/aCRz1xkHEsvAvnRkoWjkdes4bRQ3QAUI/EnuAxgAGXfcQSAADTNrRlEJZ/fvM9ejWdZqHqP0mbh3ZuxKnCvAoBddZz/NdLloNtlvOA9h8ggvMB4LaLzUewEdriZ2qP+lgl1nzQx4VkO2MI98iG+T4JbdI5VDI=
